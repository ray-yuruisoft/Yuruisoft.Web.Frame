<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Yuruisoft.RS.Model" #>
<#@ assembly name="$(SolutionDir)\Yuruisoft.RS.Model\bin\Debug\Yuruisoft.RS.Model.dll" #>
<#@ output extension=".cs" #>
/*
 * 该文件为T4模板自动创建，请勿手动添加任何代码，否则会被刷新覆盖
 * 
 * 更多技术支持，请联系业务电话：15308202328  业务QQ：11082929
 * 
 * 更多业务请查看：www.yuruisoft.com(全球） www.yurusoft.net(国内专线)
 * 
 * 版权为裕睿软件@yuruisoft.com所持 
 */

using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using Yuruisoft.RS.DAL;

namespace Yuruisoft.RS.DALfactory
{
<#var entity = new EntityClassInfo();
foreach(var item in entity.EntitiesList)
{#>
        /// <summary>
        /// 抽象工厂和工厂都是一样的，解决对象的创建问题。只是创建的方法不一样，抽象工厂使用反射
        /// </summary>
        public partial class DALAbstractFactory
        {
            public static <#=item#>Dal Create<#=item#>Dal()
            {
                string fullClassName = DalNameSpace + ".<#=item#>Dal";//构建类的全名称
                return CreateInstance(fullClassName, DalAssembly) as <#=item#>Dal;
            }
        }
<#}#>
}